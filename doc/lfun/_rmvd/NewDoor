FUNKTION:
    varargs int NewDoor(mixed cmds, string dest, mixed ids, mixed props)

ARGUMENTE:
    cmds: Befehl(e), um durch die Tuer zu gehen (String oder Array von Strings)
    dest: Zielraum
    ids:  Id(s) der Tuer, default "tuer" (String, Array von Strings oder 0)
          Achtung: Der Default-Wert "tuer" wird nicht zur Liste der Ids
        hinzugefuegt, sondern nur genommen, wenn keine angegeben sind.
    props: besondere Eigenschaften der Tuer (optional)
       Array mit Paaren Nummer der Eigenschaft, Inhalt
       definierte Properties sind:
       D_FLAGS:  Flags wie bei Sir's Tueren
                 default: DOOR_CLOSED | DOOR_RESET_CL
                 Bei Schluesseln wird getestet, ob der String, den
                 QueryDoorKey zurueckliefert, (oder EINER der Strings,
                 falls ein Array von Strings zurueckgeliefert wird) gleich
                 "raumname1:raumname2" ist, wobei raumname1,2 die
                 kompletten Filenamen der beiden Raeume in alphabetisch
                 sortierter Reihenfolge sind. So ist eine eindeutige
                 Identifizierung ohne Namenskonflikte moeglich.
         Moeglich sind:
         DOOR_OPEN, DOOR_CLOSED:
           Die Tuer ist initial offen/zu
         DOOR_NEEDKEY, DOOR_CLOSEKEY:
           Schluessel noetig zum oeffnen/schliessen
         DOOR_RESET_CL, DOOR_RESET_OP:
           Tuer wird bei jedem Reset von einem der beiden angrenzenden
           Raeume geschlossen/geoeffnet. Wer moechte, dass nur einer der
           beiden Raeume fuer die resets verantwortlich ist, muss die
           Flags entsprechend setzen.
       D_LONG:     Lange Beschreibung der Tuer. Diese Beschreibung erscheint,
                   wenn man sich die Tuer ansieht.
                   default: "Eine Tuer.\n"
       D_SHORT:    Kurze Beschreibung der Tuer, wird an die Raumbeschreibung
                   angefuegt, wobei %s durch geoeffnet bzw. geschlossen
                   ersetzt wird. Die Beschreibungen werden alle
                   hintereinandergehaengt, mit break_string(...,78)
                   umgebrochen und an P_LONG angehaengt.
                   default: "Eine %se Tuer."
       D_NAME:     Name, der beim Oeffnen/Schliessen und bei Fehlermeldungen
                   angezeigt wird.
                   default: "Tuer"
       D_GENDER:   default: FEMALE
       D_FUNC:     Funktion, die im Raum aufgerufen werden soll, wenn die
                   Tuer erfolgreich durchschritten wird. Der Aufruf erfolgt
                   VOR der Bewegung des Spielers im Startraum.
                   default: 0
       D_FUNC2:    Funktion, die im Raum aufgerufen werden soll, wenn die
                   Tuer erfolgreich durchschritten wird. Der Aufruf erfolgt
                   NACH der Bewegung des Spielers im Zielraum.
                   default: 0
       D_MSGS:     Falls String: ausgegebene Richtung fuer move
                   Falls Array:  ({direction, textout, textin}) fuer move
                   Falls 0:      direction ist "nach "+capitalize(richtung)
                   default: 0
       D_TESTFUNC: Falls gesetzt, wird diese Funktion vorm Durchschreiten
                   im Startraum aufgerufen. Wenn sie einen Wert ungleich 0
                   zurueckliefert wird die Tuer NICHT durchschritten.
                   Die Aktion ist dann nicht erfolgreich (also in
                   der Funktion notify_fail entsprechend setzen).
                   default: 0
       D_KEYTESTFUNC:
		   Wie D_TESTFUNC, testet, ob die Tuer aufgeschlossen werden
		   darf (nur, wenn ueberhaupt ein Schluessel benoetigt wird,
		   und nur, wenn dieser bereits als 'passend' identifiziert
		   wurde).


BESCHREIBUNG:
    Fuegt eine Tuer in den Raum ein.

BEISPIELE:
    NewDoor("sueden","/players/rochus/room/test1");
    // Dies ist eine gewoehnliche Tuer ohne besondere Beschreibung.

    NewDoor("norden","/players/rochus/room/test2","portal",({
            D_NAME,"Portal",
            D_GENDER,NEUTER,
            D_SHORT,"Im Norden siehst Du ein %ses Portal. ",
            D_LONG,"Das Portal ist einfach nur gigantisch.\n"
            }));

    NewDoor("teufel","/room/devil",({D_MSGS,"zum Teufel"});

    NewDoor("norden","/room/see2",
            ({D_MSGS,({"nach Norden","schwimmt","kommt hereingeschwommen})}));

RUECKGABEWERT:
    Keiner.

BEMERKUNGEN:
    Zwei Tuerseiten gelten als versschiedene Seiten einer Tuer,
    wenn als Ziel in Raum A Raum B und in Raum B Raum A angegeben ist.
    Der Zustand wird abgefragt, wenn die Tuer geoeffnet/geschlossen wird,
    P_INT_LONG oder P_EXITS abgefragt wird und beim Reset.

    Es sind auch Tueren moeglich, die nur auf einer Seite existieren, oder
    auch solche, die auf beiden Seiten verschieden aussehen oder gar
    auf einer Seite nur mit einem Schluessel zu oeffnen sind, auf
    der anderen jedoch kein Schluessel noetig ist.

    Wer aus irgendeinem Grund den Zustand einer Tuer selber abfragen oder
    veraendern will, kann dafuer in /obj/doormaster die Funktionen
    QueryDoorStatus(ziel) bzw. SetDoorStatus(ziel,status) aufrufen.
    Als ziel muss der Raumname an der anderen Seite der Tuer angegeben werden.
    Der Status kann sein:
        -2: abgeschlosssen
        -1: geschlossen
         1: geoeffnet
         0: uninitialisiert
    Uninitialisierte Tueren sollten normalerweise nicht vorkommen. Falls dieser
    Zustand dennoch auftritt, wird er als geschlossen (bzw. bei Tueren, bei
    denen ein Schluessel zum Aufschliessen noetig ist, als abgeschlossen)
    interpretiert.

