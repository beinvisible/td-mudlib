AddDetail()

FUNKTION:
     void AddDetail(mixed *keys, mixed desc);

DEFINIERT IN:
     /std/thing/description.c

ARGUMENTE:
     keys
          String oder Array von Strings mit den Namen der Details.
     desc
          String, Mapping oder Closure zur Beschreibung der Details.

BESCHREIBUNG:
     Die Beschreibung der Details keys wird gesetzt. Wie die Details bei der
     Untersuchung aussehen, haengt im wesentlichen vom Typ der Beschreibung
     desc ab:
     desc ist ein String.
          Beim Untersuchen wird dieser String zurueckgegeben.
     desc ist ein Mapping.
          Das Mapping muss folgenden Aufbau haben:

          ([ 0 : "Defaulttext", "rasse1" : "r1text", ... ]).

          Falls fuer die Rasse des das Detail untersuchenden Spielers ein
          Eintrag im Mapping existiert, wird der entsprechende Text
          zurueckgegeben, ansonsten der Defaulttext. Auf diese Weise sind
          rassenabhaengige Details moeglich. Siehe auch die Beispiele.
     desc ist eine Closure.
          In diesem Fall wird die Closure ausgefuehrt und das Ergebnis
          zurueckgegeben. Die Closure bekommt dabei den Namen des Details
          als Parameter uebergeben.

     Bei der Ausgabe des Ergebnisses (String) von desc an den Spieler wird
     noch ueberprueft, ob sich ein '\n' darin befindet; ist dies nicht der
     Fall, so wird die Ausgabe noch durch break_string(s, 78) geschleust,
     sodass es bei den meisten Details nicht mehr notwendig sein sollte,
     selbst break_string() zu verwenden.

RUECKGABEWERT:
     keiner

BEISPIELE:
     Ein schlichtes Detail (das automatisch umgebrochen wird, da sich kein
     einziges '\n' im Detail befindet):

     AddDetail( ({ "sofa", "couch" }),
       "Eine kleine Couch, die sehr gemuetlich zu sein scheint. Du kannst "+
       "es Dir auf ihr bequem machen, wenn Du willst." );

     Ein rassenabhaengiges Detail:

     AddDetail( ({ "bett", "bettchen" }),
       ([ 0: "Eine kleines Bettchen.\n", // Der Defaulttext
         "zwerg":  // Die Rasse wird klein geschrieben!
             "Das Bett laedt geradezu zu einem Nickerchen ein.\n" ]) );

     Und nun ein Detail mit Closure:

     AddDetail( ({ "hebel", "schalter" }), #'hebel );
     ...
     string hebel(string key)
     {
       if (hebel_betaetigt)
         return "Der "+capitalize(key)+" steht auf EIN.\n";
       else
         return "Der "+capitalize(key)+" steht auf AUS.\n";
     }

     Wie man sieht, ist die letzte Art ein verkappter
     AddSpecialDetail()-Aufruf (in Wirklichkeit ist es gerade andersherum).

SIEHE AUCH:
     RemoveDetail(), AddSpecialDetail(), AddReadDetail(), GetDetail(),
     /std/thing/description.c

