NewDoor()

FUNKTION:
     varargs int NewDoor(mixed cmds, string dest, mixed ids, mixed *props);

DEFINIERT IN:
     /std/room/doors.c

ARGUMENTE:
     cmds
          String oder Array von Strings mit den Befehlen, mit denen man
          durch die Tuer geht (in der Regel Richtungen wie "norden").
     dest
          Name des Zielraumes
     ids
          String oder Array von Strings mit den Bezeichnern der Tuer. Kann
          auch 0 sein; in diesem Fall laesst sich die Tuer nur als "tuer"
          ansprechen.
     props
          Die Eigenschaften der Tuer

BESCHREIBUNG:
     Es wird eine neue Tuer geschaffen. Die Tuer laesst sich, wenn sie
     geoeffnet ist, mit den in cmds angegebenen Befehlen durchschreiten. Man
     gelangt dann in den Raum dest.

     Die Kommandos werden bei geoeffneter Tuer in die Liste der sichtbaren
     Ausgaenge eingefuegt.

     In props lassen sich Aussehen und Eigenschaften der Tuer festlegen. In
     <room.h> sind dazu folgende Eigenschaften definiert:

     D_FLAGS
          Hier kann man einige Zustaende der Tuer angeben. In <doorroom.h>
          sind folgende Flags definiert:
          DOOR_OPEN
               Die Tuer ist beim Erzeugen geoeffnet.

          DOOR_CLOSED
               Die Tuer ist beim Erzeugen geschlossen.

          DOOR_NEEDKEY
               Man benoetigt einen Schluessel zum Oeffnen der Tuer.

          DOOR_CLOSEKEY
               Man benoetigt einen Schluessel zum Schliessen der Tuer.

          DOOR_RESET_CL
               Die Tuer schliesst sich beim Reset.

          DOOR_RESET_OP
               Die Tuer oeffnet sich beim Reset.

     D_LONG
          Die Langbeschreibung der Tuer.

          Default: "Eine Tuer.\n"

     D_SHORT
          Die Kurzbeschreibung der Tuer. Ein "%s" wird durch "geoeffnet"
          bzw. "geschlossen" ersetzt.

          Es werden die Kurzbeschreibungen aller im Raum vorhandenen Tueren
          aneinandergehaengt (es wird jeweils ein Leerzeichen eingeschoben),
          das Ganze mit break_string() umgebrochen und an P_INT_LONG
          angehaengt.

          Default: "Eine %se Tuer."

     D_NAME
          Der Name der Tuer. Dieser Name wird beim Oeffnen und Schliessen
          der Tuer sowie bei Fehlermeldungen ausgegeben. Man kann wie bei
          P_NAME einen String oder ein Array von Strings angeben.

          Default: "Tuer"

     D_GENDER
          Das Geschlecht der Tuer.

          Default: FEMALE

     D_MSGS
          String oder Array von drei Strings. Diese Strings werden beim
          Durchschreiten der Tuer an move() als dir bzw. dir, textout und
          textin uebergeben.

     D_FUNC
          String mit dem Namen einer Funktion, die im Startraum vor dem
          Durchschreiten der Tuer aufgerufen werden soll. Diese Funktion
          kann das Durchschreiten jedoch nicht verhindern!

     D_FUNC2
          String mit dem Namen einer Funktion, die im Zielraum nach dem
          Durchschreiten der Tuer aufgerufen werden soll.

     D_TESTFUNC
          Falls auf den Namen einer Funktion gesetzt, wird diese Funktion
          vor dem Durchschreiten im Startraum aufgerufen. Wenn sie einen
          Wert ungleich 0 zurueckliefert, wird die Tuer NICHT
          durchschritten. Die Aktion ist dann nicht erfolgreich (also in der
          Funktion notify_fail() entsprechend setzen!).

     D_KEYTESTFUNC
          Falls auf den Namen einer Funktion gesetzt, wird diese Funktion im
          Startraum aufgerufen, nachdem der richtige Schluessel vorhanden
          ist, um zu testen, ob die Tuer aufgeschlossen werden darf.

     D_OPENTESTFUNC
          Falls auf den Namen einer Funktion gesetzt, wird diese Funktion
          im Startraum aufgerufen (und zwar NACH einer evtl. angegebenen
          D_KEYTESTFUNC). Gibt sie 1 (oder einen Wert ungleich 0) zurueck,
          so wird die Tuer nicht geoeffnet. Das Scheitern der Aktion sollte
          dem Spieler nach Moeglichkeit irgendwie mitgeteilt werden (nicht
          per notify_fail(), da mit return 1 zurueckgekehrt wird, sondern
          zB. per write() o.ae.).

     D_CLOSETESTFUNC
          Falls auf den Namen einer Funktion gesetzt, wird diese Funktion
          im Startraum aufgerufen. Gibt sie 1 (oder einen Wert ungleich 0)
          zurueck, so wird die Tuer nicht geschlossen. Weiters gelten die
          selben Anmerkungen wie bei D_OPENTESTFUNC.

     D_OPENMSG
          Kann auf ein Array mit drei Elementen gesetzt werden, welche die
          Meldungen sind, die beim Oeffnen der Tuer anstelle der Standard-
          meldungen ausgegeben werden.
          Die erste Meldung geht an den Spieler, der die Tuer oeffnet.
          Die zweite Meldung muss ein %s enthalten wo der Spielername einge-
          fuegt werden soll, und geht an den Raum, in dem der Spieler grade
          steht.
          Der dritten Meldung wird der Name der Tuer vorangesetzt (Achtung,
          es muss also vorne ein Leerzeichen sein!) und sie wird im andren 
          Raum ausgegeben.
         
          Beispiel:
 
          ({"Mit einem Quietschen oeffnest Du die Tuer.",
            "Mit einem Quietschen oeffnet %s die Tuer.",
            " wird mit einem Quietschen von der anderen Seite geoffnet."})

     D_CLOSEMSG
          Wie D_OPENMSG, nur beim Schliessen der Tuer.

     D_UNLOCKMSG
          Wie D_OPENMSG, nur beim Aufschliessen der Tuer.

     D_LOCKMSG
          Wie D_OPENMSG, nur beim Abschliessen der Tuer.

     D_RESET_CLOSEMSG
          Meldung, die beim Schliessen der Tuer im reset() ausgegeben wird.
          Der Name der Tuer wird vorangestellt. (Also ein Leerzeichen am 
          Anfang!)
      
          Beispiel:
          " schliesst sich mit einem Quietschen."

     D_RESET_OPENMSG
          Wie D_RESET_CLOSEMSG, nur beim Oeffnen im reset().


RUECKGABEWERT:
     1, wenn die Tuer ordnungsgemaess eingebaut werden konnte, sonst 0.

BEMERKUNGEN:
     Zwei Tuerseiten gelten als verschiedene Seiten einer Tuer, wenn als
     Ziel in Raum A Raum B und in Raum B Raum A angegeben ist. Der Zustand
     wird abgefragt, wenn die Tuer geoeffnet/geschlossen wird, P_INT_LONG
     oder P_EXITS abgefragt wird und beim Reset.

     Es sind auch Tueren moeglich, die nur auf einer Seite existieren, oder
     auch solche, die auf beiden Seiten verschieden aussehen oder gar auf
     einer Seite nur mit einem Schluessel zu oeffnen sind, auf der anderen
     jedoch kein Schluessel noetig ist.

     Wer aus irgendeinem Grund den Zustand einer Tuer selber abfragen oder
     veraendern will, kann dafuer in /obj/doormaster die Funktionen
     QueryDoorStatus(ziel) bzw. SetDoorStatus(ziel, status) aufrufen.
     (Bitte DOOR_MASTER->QueryDoorStatus() usw. verwenden.)

BEISPIELE:

     // Dies ist eine gewoehnliche Tuer ohne besondere Beschreibung.
     NewDoor( "sueden", "/players/rochus/room/test1");

     // Ein Portal
     NewDoor( "norden","/players/rochus/room/test2","portal",
               ({ D_NAME,"Portal",
                  D_GENDER, NEUTER,
                  D_SHORT,"Im Norden siehst Du ein %ses Portal. ",
                  D_LONG, "Das Portal ist einfach nur gigantisch.\n"
               }) );

     // Wenn man zum Teufel will...
     NewDoor( "teufel", "/room/devil", ({ D_MSGS, "zum Teufel" });

     NewDoor("norden", "/room/see2",
             ({D_MSGS, ({"nach Norden", "schwimmt",
                         "kommt hereingeschwommen" })
             }) );

SIEHE AUCH:
     QueryDoorKey(), QueryDoorStatus(), SetDoorStatus(), /std/room/doors.c,
     /obj/doormaster.c
