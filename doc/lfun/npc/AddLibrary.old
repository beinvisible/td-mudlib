AddLibrary(string bibliothek, int stufe, int lokal)

BESCHREIBUNG
    Will man die Begriffe, die NPCs kennen, extern verwalten, so kann man 
    sie in eine eigene Library (Bibliothek) auslagern - dies ist eine 
    Datei, die einer bestimmten Syntax folgt. Besonders interessant
    ist dies, wenn man alle Einwohner eines Ortes mit Informationen zu 
    diesem Ort versorgen will, aber nicht jedem NPC die Hundertschar an 
    AddInfo()'s mitgeben will. Ist 'lokal' nicht definiert, so werden diese 
    Texte auch nur an einer einzigen Stelle (naemlich im 
    Librarymaster /obj/libmaster) verwaltet und benoetigen weniger 
    Speicherplatz. Mit dem 'stufe' ist es zusaetzlich moeglich, einen 
    Begriff qualitativ zu bewerten und duemmere und kluegere NPCs mit der-
    selben Bibliothek zu unterscheiden.

BEISPIEL

# beispiel.lib
#
# Es geht darum, wo sich ein amulett befindet.
#
info:1:amulett, schutzamulett
indent: brabbelt
Amulett? Es gibt viele Amulette...
info:2:schutzamulett
Das Schutzamulett soll ziemlich bewacht werden.. von gruenen Zauberern
und so...
info:3:schutzamulett
indent:meint:
Das Schutzamulett soll im gruenen Zaubererturm bewacht werden, von
fiesen gruenen Zauberern.
# ende Beispiel.lib

Der NPC dazu:

void create()
{
...
    AddLibrary("beispiel.lib", 3);
...
}

Dieser NPC reagiert dann auf frage xxx nach schutzamulett mit der Antwort
auf 'info:3', und bei 'amulett' auf 'info:1', da er nichts besseres weiss.

Die einzelnen normale Syntax in dem Lib-File ist Folgende:
info:Level:Begriffe 
info: Schluesselwort
     Level: der Qualitaetslevel (derzeit 1-3)
           Begriffe: Worauf soll der NPC reagieren

indent:indentkey
indent: Schluesselwort
       indentkey: was soll dazwischengesetzt werden?
Ist dieses Schluesselwort nicht gesetz, wird "sagt:" uebernommen.

Alle anderen Texte werden als Info interpretiert, die dem vorhergehenden info: 
zugeordnet werden.
Der Eintrag
info:1:test
indent:sagt:
Das ist ein Test.

wuerde bei dem klassischen AddInfo folgendermassen realisiert werden:
(rein technisch macht der Libmaster genau das, naemlich den NPC AddInfos
zu generieren, wenn sie gecloned werden)
AddInfo(({"test"}),"Das ist ein Test.","sagt: ");


SIEHE AUCH
    AddInfo(), npc
