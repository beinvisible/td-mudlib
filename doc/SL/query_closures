
Query-Closures
--------------

(w) Woody, Feb 1998
    Credits to Boing@Morgengrauen


Das im Tamedhon verwendete Property-System erlaubt es, Objekten
Eigenschaften zuzuordnen, die man von aussen abfragen oder setzen
und in ihrer Veraenderbarkeit einschraenken kann. So kann man zum
Beispiel definieren, dass eine Property nur vom  Objekt,  zu  der
sie gehoert, manipuliert werden darf.

Unter anderem gibt es hier auch die Moeglichkeit,  Query-Methoden
zu definieren. Diese werden aufgerufen, sobald QueryProp() aufge-
rufen wird. Der Unterschied zum Setzen eines Wertes ist, dass die
Querymethode mehr oder weniger dynamisch an die Property gebunden
wird - der urspruenglich gesetzte Wert bleibt weiterhin erhalten,
wird aber vom Rueckgabewert der Querymethode sozusagen ueberdeckt
und ist idR. nur mehr mit Query() abrufbar. Zudem wird die Query-
Methode (respektive die Referenz auf sie) nicht bei save_object()
mit abgespeichert - eignet sich also ideal dazu,  temporaere Ver-
aenderungen in Properties von Spielerobjekten zu realisieren,  da
ein Absturz des Muds oder 'ende' des Spielers keinen evtl. inkon-
sistenten Zustandswert in der Property zuruecklaesst.  Vor  allem
spielerfreundliche Zustandsaenderungen sind so sicherer, hingegen
bei spielerfeindlichen,  einschraenkenden  Aenderungen  muss  man
achtgeben, dass diese so nicht durch ein einfaches  'ende'  abge-
legt werden koennen.

Beispiel:
Eine Gilde will flammende Haende implementieren. Zu diesem Zweck
definiert das Gildenobjekt eine Funktion MyHands(), die den Wert
zurueckgibt, der in P_HANDS stehen soll. Beim Casten des Spells
wird vom Gildenobjekt folgendes gesetzt:

  spieler->Set( P_HANDS, symbol_function("MyHands", this_object()),
      F_QUERY_METHOD );

Soll die Wirkung beendet werden, so erreicht man das durch Austragen
der Query-Method, mit:

  spieler->Set( P_HANDS, 0, F_QUERY_METHOD );

