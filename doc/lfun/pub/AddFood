FUNKTION:
     void AddFood(string name, mixed ids, int preis, mixed heilung,
                  int staerke, mixed extra);

DEFINIERT IN:
     /std/pub.c

ARGUMENTE:
     name
          Der Name der Speise.
     ids
          String oder Array von Strings, mit denen sich die Speise
          ansprechen laesst (beim Bestellen).
     preis
          Was solls denn kosten?
     heilung
          Heilwert der Speise als int oder als Array aus 3 Ints
     staerke
          Saettigungsgrad der Speise.
     extra
          Closure, String oder Array von String. Bedeutung s.u.

BESCHREIBUNG:
     Es wird eine Speise namens <name> zum Preis von <preis> in die
     Speisekarte eingefuegt.

     Bestellt ein Spieler die Speise, kann sie finanzieren und auch noch
     verzehren, so wird er um <heilung> Lebens- und Magiepunkte geheilt.
     Seine Saettigung erhoeht sich dabei um <staerke> Punkte.

     Ist <heilung> ein Array, so kann man die Art der Heilung differenzierter
     festlegen. heilung[0] ist die Anzahl der Lebenspunkte, heilung[1] die
     Anzahl der Magiepunkte, und heilung[2] ein zusaetzlicher Randomfaktor,
     der gleichermassen auf LP und MP (aber nur falls ungleich 0) auf-
     geschlagen wird. Fehlende Eintraege werden durch 0 ergaenzt.

     Abhaengig von <extra> wird dann eine der folgenden Aktionen ausgefuehrt:
     <extra> ist eine Closure oder ein Funktionsname
          Die Funktion wird aufgerufen. Als Parameter bekommt sie den
          Spender und den Empfaenger der Speise.

          In der Funktion kann man irgendwelche Sonderfunktionen ausfuehren.
          Wenn man Knoblauch bestellt hat, kann man dem Empfaenger zB. ein
          Mundgeruchsobjekt unterschieben.

     <extra> ist ein Array von zwei Strings
          Der erste dieser Strings wird an den Empfaenger der Speise
          ausgegeben, der zweite der Strings an alle anderen in der Kneipe.

          Mit "&&" kann dabei der Name des Empfaengers in die Strings
          eingebaut werden, mit "&!" das Personalpronomen des Empfaengers im
          Nominativ.

          Zusaetzlich werden "&1", "&2", "&3" und "&4" durch das Personal-
          pronomen des Empfaengers im Nominativ, Genitiv, Dativ und Akkusativ
          ersetzt, ausserdem "&=" durch das Possessivpronomen des Empfaengers
          im Singular ('sein', 'ihr') ersetzt und "&#" im Plural ('seine',
          'ihre').

RUECKGABEWERT:
     keiner

BEMERKUNGEN:
     Man sollte darauf achten, dass man keine guten Heilspeisen zu
     Schleuderpreisen verkauft. Noch wichtiger ist allerdings, dass das
     Verhaeltnis von Heilung zu Saettigung stimmt:
              heilung < 3 * (staerke)
     oder es sollten andere nennenswerte Nachteile auftreten. Dagegen
     ist es durchaus erlaubt, Speisen mit heilung=0 auf die Karte
     zu setzen.

     Zum Ueberpruefen, ob eine Kneipe den Richtlinien entspricht, kann
     man /obj/tools/kneipenanalyse.c benutzen.

BEISPIELE:
     inherit "/std/pub";
     create() {
       ::create();
       SetProp(...);

       AddFood("Schnitzel", "schnitzel", 50, 5,
         ({ "Du kaust auf dem zaehen Schnitzel herum.",
            "&& kaut auf einem zaehen Schnitzel herum." }) );

       AddFood("Knofipizza", ({ "pizza", "knofipizza" }),
         70, 10, "pizza" );
     }

     void pizza(object zahler, object esser)
     {
       tell_object(esser, "Du isst genuesslich Deine Pizza.\n");
       tell_room(this_object(), esser->name(WER)+" isst eine Knofipizza.\n",
        ({ esser }) );
       clone_object("/obj/mundgeruch"->move(esser, M_NOCHECK));
     }

SIEHE AUCH:
     AddDrink(), /std/pub.c, /obj/tools/kneipenanalyse.c, is_pub

