STANDARDOBJEKT FUER WAFFEN:
 
BENUTZUNG:
        inherit "std/weapon";

	#include <properties.h>
	#include <combat.h>

BESCHREIBUNG:
	Basisklasse fuer alle Waffen im Spiel. Sie ist von /std/thing
	abgeleitet und enthaelt alle zusaetzliche Funktionalitaet
	fuer den Kampf.

   Properties:

	P_WC
		Waffenklasse der Waffe, bestimmt den angerichteten Schaden
	P_WEAPON_TYPE
		Art der Waffe, zum Beispiel Schwert, Messer ...
		(siehe /sys/combat.h)
	P_DAM_TYPE
		Art des Schadens, zum Beispiel stechen, schlagen ...
		(siehe /sys/combat.h)
	P_NR_HANDS
		Anzahl der Haende, die benoetigt werden um die Waffe
		zu benutzen.
	Alle Properties aus /std/thing

   Funktionen:
	SetHitFunc(object ob)
		Setzt das Objekt, in dem die Funktion HitFunc() definiert
		ist. HitFunc() bekommt den aktuellen Gegner als Parameter
		uebergeben und gibt selber einen Integer-Wert zurueck,
		der zum aktuellen Schaden addiert wird (Zum Beispiel
		Bonus gegen Drachen, Untote oder was auch immer).
	QueryHitFunc()
		Liefert das Objekt in dem HitFunc() definiert ist.
	SetWieldFunc(object ob)
		Setzt das Objekt, in dem die Funktion WieldFunc() definiert
		ist. WieldFunc() wird beim Versuch die Waffe zu zuecken
		aufgerufen. Wenn WieldFunc() 0 zurueck gibt, scheitert
		der Versuch.
	QueryWieldFunc()
		Liefert das Objekt, in dem WieldFunc() definiert ist.
	SetUnwieldFunc(object ob)
		Setzt das Objekt, in dem die Funktion UnwieldFunc()
		definiert ist. Die Funktion wird beim Wegstecken der
		Waffe aufgerufen, gibt sie 0 zurueck, so scheitert der
		Versuch.
	QueryUnwieldFunc()
		Liefert das Objekt, in dem UnwieldFunc() definiert ist.
	QueryWielded()
		Liefert den Spieler (oder das Monster), der die Waffe
		gezueckt hat oder 0, wenn die Waffe nicht gezueckt ist.

	Vor der Programmierung von Waffen sollte /doc/AL/waffen_werte
	gelesen werden. Die Regeln darin sind verbindlich und sollten nur
	in Ausnahmefaellen und mit Absprache mit dem Erzmagier fuer 
	Waffen/Ruestungen/Monster ueberschritten werden.
