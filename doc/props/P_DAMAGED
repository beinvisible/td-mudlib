P_DAMAGED

NAME:
    P_DAMAGED                     "damaged"

DEFINIERT IN:
    <combat.h>

BESCHREIBUNG:
    Ruestungen und Waffen koennen im Eifer des Gefechts beschaedigt werden.
    Der Grad der Beschaedigung sollte in dieser Property festgehalten
    werden.

    Bei Waffen ergibt sich die urspruengliche Waffenklasse aus der Summe
    von aktueller Waffenklasse und dem Wert von P_DAMAGED:
    altes P_WC = aktuelles P_WC + P_DAMAGED.

    Analoges gilt fuer die Ruestungsklasse einer beschaedigten Ruestung:
    altes P_AC = aktuelles P_AC + P_DAMAGED.

    Eine Instanz zur Reparatur von Ruestungen oder Waffen (z.B. ein
    Schmied) sollte daran denken, nach der Reparatur auch P_DAMAGED wieder
    zurueck zu setzen!

BEISPIELE:
     Eine Waffe, die sich im Laufe der Zeit per TakeFlaw() abnutzt, koennte
     man wie folgt gestalten:

     TakeFlaw()
     {
       int flaw, wc;

       /* erst mal den Zaehler erhoehen... */
       ::TakeFlaw();

       /* jetzt den aktuellen Zaehlerstand abfragen */
       flaw = QueryFlaw()[0];

       /* Abzug nur jeden 20. Schlag */
       if (!(flaw % 20)) {
         wc = QueryProp(P_WC);

         /* eine minimale WC von 20 soll garantiert bleiben... */
         if (wc > 20) {

           /* Waffenklasse runter... */
           SetProp(P_WC, wc-1);

           /* P_DAMAGED setzen, damit die Waffe auch noch */
           /* repariert werden kann...                    */
           SetProp(P_DAMAGED, QueryProp(P_DAMAGED)+1);

           /* Und den Traeger der Waffe ueber den Schaden */
           /* informieren... */
           tell_object(QueryProp(P_WORN), capitalize(name(WER,1))+
             " hat gerade leider Schaden genommen!\n");
         }
       }
     }

SIEHE AUCH:
     /std/armour.c, /std/weapon.c, TakeFlaw(), QueryFlaw()

