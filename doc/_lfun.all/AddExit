AddExit()

FUNKTION:
     void AddExit(mixed cmd, mixed dest);

DEFINIERT IN:
     /std/room/exits

ARGUMENTE:
     cmd
          String oder Array von Strings mit den Richtungen, in die der
          Ausgang fuehrt.
     dest
          Ziel des Ausgangs.

BESCHREIBUNG:
     Es wird ein Ausgang in die Richtung(en) cmd eingefuegt. Die Art des
     Ausgangs haengt ab von dest:
        o Ist dest ein String mit dem Dateinamen eines anderen Raumes, so
          fuehrt der Ausgang in diesen Raum.
        o Ist dest ein String der Form "<msg>#dateiname", so fuehrt der
          Ausgang in den mit "dateiname" angegebenen Raum. Beim Benutzen des
          Ausgangs wird jedoch nicht "<name> geht nach <richtung>"
          ausgegeben, sondern "<name> geht <msg>"
        o Ist dest eine Closure, so wird diese beim Benutzen des Ausgangs
          ausgefuehrt. Dies entspricht einem SpecialExit. Man muss das
          Lebewesen also "von Hand" in den Zielraum bewegen.

RUECKGABEWERT:
     keiner

BEMERKUNGEN:
     Man kann fuer den Dateinamen des Zielraumes auch einen relativen Pfad
     angeben. Die Auswertung erfolgt nach folgendem Schema:
     erste Pfadkomponente ist ein ".":
          Es wird ein Zielraum relativ zum gleichen Verzeichnis wie dieser
          Raum angesprochen.
     erste Pfadkomponente ist ein "..":
          Es wird ein Zielraum relativ zur Verzeichnisebene ueber der
          dieses Raumes angesprochen (analog mit mehrerern "../..")

BEISPIELE:
     Ein normaler Ausgang:

     // Beim Kommando "sueden" kommt: "<name> geht nach Sueden."
     AddExit("sueden", "/gilden/abenteurer");

     // Beim Kommando "sueden" kommt: "<name> geht in die Gilde."
     AddExit("sueden", "in die Gilde#/gilden/abenteurer");

     Ausgaenge mit relativen Pfaden:

     // Der Name des Raumes sei "/d/inseln/wargon/hafen1"
     // Dieser Ausgang geht nach "/d/inseln/wargon/kneipe":
     AddExit("norden", "./kneipe" );

     // Und dieser nach "/d/inseln/anthea/anlege":
     AddExit("sueden", "../anthea/anlege" );

SIEHE AUCH:
     RemoveExit(), AddSpecialExit(), GetExits(), /std/room/exits.c

