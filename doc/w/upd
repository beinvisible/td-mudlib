SYNTAX: upd [ -afilr ] <datei> [...]

ARGUMENTE:
        datei -- Dateiname (... bedeutet, es kann auch mehr als einer sein)

BESCHREIBUNG:
        Dieses spezielle Kommando stellt ein dateibasiertes update dar.
        Es zerstoert und/oder laedt geladene Objekte (Blueprints).
        -a -- zerstoere alle Instanzen (Clones) der Datei
        -f -- finde alle Instanzen (Clones) der Datei
        -i -- zerstoere alle geerbten Klassen der Datei (nur wenn geladen)
        -l -- lade die gefundene Datei (zerstoert altes Objekt, falls geladen)
        -r -- wenn ein Objekt zerstoert wurde, versuche es neu zu laden
        -b -- versuche Backtrace aus /<Rechner>.debug.log zu lesen (bei Fehler)
        -m -- MAKE - aehnlich -i aber mit Abhaengigkeitscheck
        -v -- gibt einen vollen Abhaengigkeitsbaum aus, in Zusammenhang mit -m
        -c -- kopiert die properties des original Objektes
    
        Es koennen auch Objekte angegeben werden, die nicht als Datei exis-
        tieren, d.h. man kann auch Instanzen mit dem # im Namen zerstoeren.
        Ausserdem koennen nur Objekte, die man selbst schreiben darf,
        zerstoert/geladen werden.

        upd merkt sich das zuletzt geladene oder geclonte Objekt!
        Dies wirkt sich vor allem dann aus, wenn man ein Objekt zum testen 
        immer wieder zerstoeren, updaten, laden und clonen muss. Diese Reihe
        von Kommandos wird durch upd -mr ohne Argument auf das zuletzt geladene
        oder gelonte Objekt vollzogen.

BEISPIELE:
       upd *.c
       upd -r *
       upd -mv test.c
       upd -r test#1235

SIEHE AUCH: update, destruct, load
