AddId()

FUNKTION:
     void AddId(mixed ids);

DEFINIERT IN:
     /std/thing/description.c

ARGUMENTE:
     ids
          String oder Array von Strings mit den Bezeichnungen, mit denen
          sich sich das Objekt ansprechen lassen soll.

BESCHREIBUNG:
     Jedes Objekt sollte sich auf die eine oder andere Weise ansprechen
     lassen. Zu diesem Zweck kann man dem Objekt mit dieser Funktion
     Bezeichner uebergeben.

RUECKGABEWERT:
     keiner

BESONDERES:
     FELL_WUSCHEL, SCHUPPEN_WUSCHEL, HAUT_WUSCHEL, STEIN_WUSCHEL,
     FEDERN_WUSCHEL, MAEHNE_WUSCHEL, HAARE_WUSCHEL
     Diese Strings sorgen fuer die richtige Meldung beim Verb "Wuscheln".
     Beispiel:
     AddId(({"FELL_WUSCHEL", "hund"}));
     wuschel hund -> Du verwuschelst des Hundes Fell.

BEMERKUNGEN:
     Jedes Objekt sollte man zumindest mit seiner Kurzbeschreibung
     ansprechen koennen! Fuer Abfragen von Questobjeken o.ae. sollte man
     dem Objekt zusaetzliche, moeglichst eindeutige/einzigartige IDs
     geben, damit sichergestellt ist, dass der Spieler auch wirklich
     die richtigen Objekte dabei hat. Eine Abfrage auf ID "tuer_key"
     im Code identifiziert mit grosser Wahrscheinlichkeit nicht nur
     einen Schluessel! Besser waere hier:
     MAGIERNAME+PROJEKTKUERZEL+"_key".

     Durch Hinzufuegen von Sonderzeichen wie "\n" oder "\t" kann man
     zudem verhindern, dass die Objekte durch Spieler angesprochen
     werden koennen, was vorallem bei unsichtbaren Questobjekten noetig
     ist.

BEISPIELE:

     AddId( "buch" );
     AddId( "buechlein" );

     Das Objekt laesst sich jetzt als "buch" und als "buechlein" ansprechen.

     AddId( ({ "buch", "buechlein" }) );

     Diese Zeile bewirkt das gleiche wie die obigen zwei Zeilen.

     AddId( ({ "puzzle", "\nquest_puzzle" }) );

     Der Spieler kann das Objekt als "puzzle" ansprechen, questrelevante
     Objekte koennen mit der ID "\nquest_puzzle" nach ihm suchen.

SIEHE AUCH:
     AddAdjective(), RemoveId(), id(), present(), /std/thing/description.c

