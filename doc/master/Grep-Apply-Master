backend.c:		apply_master_ob("external_master_reload", 0);
backend.c:    ret = apply_master_ob("epilog", 1);
backend.c:	(void)apply_master_ob("preload", 1);
backend.c:	     * yyerror calls smart_log(). smart_log calls apply_master_ob().
closure.c:	    res = apply_master_ob("privilege_violation", 3);
comm1.c:		apply_master_ob("receive_imp", 2);
comm1.c:	    apply_master_ob("disconnect", 1);
comm1.c:	ret = apply_master_ob("connect", 0);
comm1.c:	(void)apply_master_ob("remove_player", 1);
comm1.c:    ret = apply_master_ob("valid_snoop", 2);
comm1.c:    v = apply_master_ob("valid_exec", 1);
ed.c:	ret = apply_master_ob("make_path_absolute", 1);
ed.c:		ret = apply_master_ob("save_ed_setup",2);
ed.c:	setup = apply_master_ob("retrieve_ed_setup",1);
ed.c:    stmp = apply_master_ob("get_ed_buffer_save_file_name",1);
gcollect.c:	    res = apply_master_ob("quota_demon", 0);
interpret.c:    ret = apply_master_ob("query_allow_shadow", 1);
interpret.c:    svp = apply_master_ob("privilege_violation", 3);
interpret.c:    svp = apply_master_ob("privilege_violation", 4);
interpret.c:	ret = apply_master_ob("valid_seteuid", 2);
interpret.c:		arg1 = apply_master_ob("valid_query_snoop", 1);
interpret.c:	    apply_master_ob("runtime_error", a);
interpret.c:struct svalue *apply_master_ob(fun, num_arg)
interpret.c:	    apply_master_ob("runtime_error", a);
interpret.c:	result = sapply(fun, master_ob, num_arg);
interpret.c:		sapply("reactivate_destructed_master", ob, 1);
interpret.c:		sapply("inaugurate_master", ob, 0);
interpret.c:	ret = apply_master_ob("get_root_uid", 0);
interpret.c:	apply_master_ob("inaugurate_master", 0);
interpret.c:	arg = apply_master_ob("query_player_level", 1);
interpret.c:	arg = apply_master_ob("query_player_level",1);
lang.c:			res = apply_master_ob("privilege_violation", 3);
lang.y:			res = apply_master_ob("privilege_violation", 3);
lex.c:		res = apply_master_ob("privilege_violation", 3);
lint.h:struct svalue *apply_master_ob PROT((char *fun, int num_arg));
main.c:     * Look at apply_master_ob() for more details.
main.c:    ret = apply_master_ob("get_root_uid", 0);
main.c:    ret = apply_master_ob("get_bb_uid", 0);
main.c:    apply_master_ob("inaugurate_master", 0);
main.c:		(void)apply_master_ob("flag", 1);
main.c:    set_inc_list(apply_master_ob("define_include_dirs", 0));
main.c:	(void)apply_master_ob("epilog", 0);
parse.c:    pval = apply_master_ob(QGET_ID,0);
parse.c:    pval = apply_master_ob(QGET_PLURID,0);
parse.c:    pval = apply_master_ob(QGET_ADJID,0);
parse.c:    pval = apply_master_ob(QGET_PREPOS,0);
parse.c:    pval = apply_master_ob(QGET_ALLWORD,0);
parse.c:	ret = apply_master_ob("get_bb_uid",0);
prolang.y:			res = apply_master_ob("privilege_violation", 3);
simul_efun.c:    svp = apply_master_ob("get_simul_efun", 0);
simulate.c:    ret = apply_master_ob("creator_file", 1);
simulate.c:	svp = apply_master_ob("compile_object", 1);
simulate.c:    result = apply_master_ob("prepare_destruct", 1);
simulate.c:	    arg = apply_master_ob("query_player_level", 1);
simulate.c:	printf("error in apply_master_ob: %s", emsg_buf+1);
simulate.c:	apply_master_ob("runtime_error", a);
simulate.c:	    svp = apply_master_ob("heart_beat_error", a);
simulate.c:	apply_master_ob("log_error", 2);
simulate.c:	v = apply_master_ob("valid_write", 4);
simulate.c:	v = apply_master_ob("valid_read", 4);
simulate.c:    apply_master_ob("slow_shut_down", 1);
sprintf.c:      temp = apply_master_ob("object_name", 1);
wiz_list.c:    ret = apply_master_ob("get_wiz_name", 1);
