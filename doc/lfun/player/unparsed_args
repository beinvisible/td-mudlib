FUNKTION:
         varargs string _unparsed_args(int level)

DEFINIERT IN:
         /std/player/command.c


ARGUMENTE:
         level - Optionales Argument, darf 0, 1 oder 2 sein und gibt an,
                 welchen Level der Parser verwendet.
                 Default ist 0.

BESCHREIBUNG:
        Gibt den Text des letzten Befehls des Spielers (ohne das Befehlswort
        selbst) zurueck. "level" gibt dabei an, wieviel geparsed wird:
        level = 0 : Gar kein Parsing.
                    -> entspricht einem query_command()
        level = 1 : Der Text wird in Kleinbuchstaben umgewandelt, doppelte
                    Leerzeichen werden entfernt.
        level = 2 : Semikolons, Kommata und Doppelpunkte werden in Leerzeichen
                    umgewandelt, doppelte Leerzeichen und Artikel (der, die,
                    das, ein,...) werden entfernt.

RUECKGABEWERT:
         Die Zeichenkette, die die Argumente des letzten vom Spieler
         aufgerufenen Kommandos enthaelt.

BEMERKUNGEN:
         Diese Funktion sollten nur Funktionen verwenden, welche
         Spielereingaben auswerten. Ein gewisses Risiko besteht, damit
         Code einzuschleusen.

BEISPIELE:
         ...
         AddCmd("sag","sag_fun");
         ...
         int sag_fun(string str)
         {
           str=this_player()->_unparsed_args();
           tell_room(environment(this_player()),
             break_string(str,78,this_player()->Name()+" sagt:"),
             ({this_player()}));
           tell_object(this_player(),
             break_string(str,78,"Du sagst:"));
           return 1;
         }

         Hier wird der ganze Text ausgegeben, den der Spieler beim 'sag'
         angibt, waehrend in str anfangs ein geparster Text steht.
         Ohne die Zeile: str=this_player()->_unparsed_args(); koennte
         man mit dieser sag_fun nur in Kleinbuchstaben und ohne Kommas
         etc sprechen.

SIEHE AUCH:
         AddCmd

