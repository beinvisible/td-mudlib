FUNKTION:
	void AddInfo( string frage, mixed meldung );
	void AddInfo( string* fragen, mixed meldung );
	void AddInfo( string frage, mixed meldung, string indent );
	void AddInfo( string* fragen, mixed meldung, string indent );

ARGUMENTE:
	frage, fragen: Texte auf die Informationen gegeben werden sollen.
	meldung: Information(en), die gegeben werden soll.
	indent: Text, der sich bei mehrzeiligen Meldungen wiederholen soll.

FUNKTION:
	Wenn ein Spieler ein NPC mittels "frage <monstername> nach <frage>"
	nach einer Information fragt, so wird die entsprechende Meldung
	ausgegeben. Dieser Meldung wird der Name des Monsters vorangestellt.
	
	Wird ein indent angegeben wo wird die Meldung, falls sie nicht in eine
	Zeile passt, umgebrochen und jeder Zeile der Indent vorangestellt.
	Typischerweise ist der indent gleich "sagt: ".

	Mittels der in <npc.h> definierten Frage DEFAULT_INFO kann eine
	Meldung gesetzt werden, die gegeben werden soll, wenn der Spieler
	etwas fragt, auf das keine Antwort vorgegeben ist (Dieses ist die
	neue Form von SetProp( P_DEFAULT_INFO )).
	
	Fuer besondere Informationen kann als Meldung eine Closure ueber-
	geben werden, dieser wird dann beim Aufruf die Frage als Parameter
	uebergeben. Die Closure gibt dann einen String zurueck, der an den
	Spieler ausgegeben wird (wenn nicht, wird auch nichts ausgegeben).

	Die Meldung wird vor der Ausgabe durch process_string() abgearbeitet,
	sodass es auch so moeglich ist, einzelne Textpassagen variabel zu
	gestalten oder bestimmte Aktionen auszuloesen (siehe auch die
	man-Page zu process_string).

	Wird als Meldung ein Array uebergeben, so wird bei der Befragung
	des NPCs zufaellig ein Element des Arrays ausgewaehlt. Dieses
	kann dann wiederum ein String oder eine Closure sein.

RUECKGABEWERT:
	keiner

BEISPIELE:
	AddInfo( ({"geld","muenzen"}), "sagt: ich habe kein Geld.\n" );
	AddInfo( DEFAULT_INFO, "starrt Dir in die Augen.\n" )
		Dasselbe wie SetProp( P_DEFAULT_INFO, "starrt..." );
	AddInfo( "geld", "ich habe zwar kein geld, aber ... blablabla",
		"sagt: " );

	Die Frage:
		frage monster nach geld
	ergibt dann:
		Das Monster sagt: ich habe zwar kein geld, aber ...
		Das Monster sagt: ... blablabla ...
		Das Monster sagt: ...

	AddInfo( ({"geld","muenzen"}), #'ausgabe, "sagt: ");

	In der Closure "Ausgabe" koennte das Monster sein Geld zaehlen
	und den Wert zurueckgeben. Da der Closure die Frage uebergeben
	wird, koennte das Monster auf "geld" und "muenzen" unterschied-
	lich reagieren.

